@{ 
    Layout = "";
}
    <link rel="stylesheet" href="https://js.arcgis.com/4.3/esri/css/main.css">
    <script src="https://js.arcgis.com/4.3/"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <style>
        html,
        body,
        #viewDiv {
            padding: 0;
            margin: 0;
            height: 600px;
            width: 100%;
        }

        .editArea-container {
            background: #fff;
            font-family: "Avenir Next W00", "Helvetica Neue", Helvetica, Arial, sans-serif;
            line-height: 1.5em;
            overflow: auto;
            padding: 12px 15px;
            width: 300px;
        }

        .edit-button:hover,
        .edit-button:focus {
            background-color: #e4e4e4;
        }

        .inputInfo {
            font-size: 12px;
            height: 32px;
            margin-bottom: 6px;
            padding: 0 6px;
            width: 100%;
        }

        .list-heading {
            font-weight: normal;
            margin-top: 20px;
            margin-bottom: 10px;
            color: #323232;
        }

        .edit-button {
            font-size: 14px;
            height: 32px;
            margin-top: 10px;
            width: 100%;
            background-color: transparent;
            border: 1px solid #0079c1;
            color: #0079c1;
        }

        .or-wrap {
            background-color: #e0e0e0;
            height: 1px;
            margin: 2em 0;
            overflow: visible;
        }

        .or-text {
            background: #fff;
            line-height: 0;
            padding: 0 1em;
            position: relative;
            top: -.75em;
        }

        input:invalid {
            border: 1px solid red;
        }

        input:valid {
            border: 1px solid green;
        }
    </style>
    <script>
        require([
                "esri/Map",
                "esri/views/MapView",
                "esri/layers/MapImageLayer",
                "esri/layers/FeatureLayer",
                "esri/Graphic",
                "esri/widgets/Expand",
                "esri/widgets/Home",
                "esri/geometry/Extent",
                "esri/Viewpoint",
                "esri/symbols/SimpleMarkerSymbol",
                "esri/core/watchUtils",
                "dojo/on",
                "dojo/dom",
                "dojo/domReady!"
        ],
    function (
        Map, MapView, MapImageLayer, FeatureLayer, Graphic, Expand,
        Home, Extent, Viewpoint, SimpleMarkerSymbol, watchUtils,
        on, dom
    ) {

        var featureLayer, editExpand, searchExpand;

        // feature edit area domNodes
        var editArea, attributeEditing, inputDescription,
            inputUserInfo, updateInstructionDiv;

        var map = new Map({
            basemap: "streets"
        });

        var baseMap = new MapImageLayer({
            url: "http://112.78.4.175:6080/arcgis/rest/services/Basemap_BaoVeThucVat/MapServer",
            title: "Lớp dữ liệu Bình Dương"
        });
        map.add(baseMap);



        var view = new MapView({
            container: "viewDiv",
            map: map,
            zoom: 13, // Sets the zoom level based on level of detail (LOD)
            center: [106.688166, 11.172618], // Sets the center point of view in lon/lat
        });
        console.log(view.zoom);

        //Create new doanhNhgiep FeatureLayer connect with Arcgis Services
        featureLayer = new FeatureLayer("http://112.78.4.175:6080/arcgis/rest/services/BaoVeThucVat_ChuyenDe/FeatureServer/0", {
            mode: FeatureLayer.MODE_ONDEMAND,
            outFields: ["*"],
            title: "Doanh nghiệp"
        });
        map.add(featureLayer);
        setupEditing();
        setupView();

        function addLayer(lyr) {
            featureLayer = lyr;
            map.add(lyr);
        }

        function applyEdits(params) {
            unselectFeature();
            var promise = featureLayer.applyEdits(params);
            editResultsHandler(promise);
        }

        // *****************************************************
        // applyEdits promise resolved successfully
        // query the newly created feature from the featurelayer
        // set the editFeature object so that it can be used
        // to update its features.
        // *****************************************************
        function editResultsHandler(promise) {
            promise
                .then(function (editsResult) {
                    var extractObjectId = function (result) {
                        return result.objectId;
                    };

                    // get the objectId of the newly added feature
                    if (editsResult.addFeatureResults.length > 0) {
                        var adds = editsResult.addFeatureResults.map(
                            extractObjectId);
                        newIncidentId = adds[0];

                        selectFeature(newIncidentId);
                    }
                })
                .otherwise(function (error) {
                    console.log("===============================================");
                    console.error("[ applyEdits ] FAILURE: ", error.code, error.name,
                        error.message);
                    console.log("error = ", error);
                });
        }

        // *****************************************************
        // listen to click event on the view
        // 1. select if there is an intersecting feature
        // 2. set the instance of editFeature
        // 3. editFeature is the feature to update or delete
        // *****************************************************
        view.on("click", function (evt) {
            unselectFeature();
            console.log(evt);
            view.hitTest(evt.screenPoint).then(function (response) {
                console.log(response);
                if (response.results.length > 0 && response.results[0].graphic) {

                    var feature = response.results[0].graphic;
                    selectFeature(feature.attributes[featureLayer.objectIdField]);

                    inputDescription.value = feature.attributes[
                        "MaDoanhNghiep"];
                    inputUserInfo.value = feature.attributes[
                        "NguoiDaiDienDoanhNghiep"];
                    attributeEditing.style.display = "block";
                    updateInstructionDiv.style.display = "none";
                }
            });
        });

        // *****************************************************
        // select Feature function
        // 1. Select the newly created feature on the view
        // 2. or select an existing feature when user click on it
        // 3. Symbolize the feature with cyan rectangle
        // *****************************************************
        function selectFeature(objectId) {
            // symbol for the selected feature on the view
            var selectionSymbol = SimpleMarkerSymbol({
                color: [0, 0, 0, 0],
                style: "square",
                size: '40px',
                outline: {
                    color: [0, 255, 255, 1],
                    width: "3px"
                }
            });
            var query = featureLayer.createQuery();
            query.where = featureLayer.objectIdField + " = " + objectId;

            featureLayer.queryFeatures(query).then(function (results) {
                if (results.features.length > 0) {
                    editFeature = results.features[0];
                    editFeature.symbol = selectionSymbol;
                    view.graphics.add(editFeature);
                }
            });
        }

        // *****************************************************
        // hide attributes update and delete part when necessary
        // *****************************************************
        function unselectFeature() {
            attributeEditing.style.display = "none";
            updateInstructionDiv.style.display = "block";

            inputDescription.value = null;
            inputUserInfo.value = null;
            view.graphics.removeAll();
        }

        // *****************************************************
        // add homeButton and expand widgets to UI
        // *****************************************************
        function setupView() {
            // set home buttone view point to initial extent
            var homeButton = new Home({
                view: view
            });
            view.ui.add(homeButton, "top-left");

            //expand widget
            editExpand = new Expand({
                expandIconClass: "esri-icon-edit",
                expandTooltip: "Expand Edit",
                expanded: true,
                view: view,
                content: editArea
            });
            view.ui.add(editExpand, "top-right");
            searchExpand = new Expand({
                expandIconClass: "esri-icon-search",
                expandTooltip: "Expand Edit",
                expanded: false,
                view: view,
                content: dom.byId("searchArea")
            });
            view.ui.add(searchExpand, "top-right");


        }

        // *****************************************************
        // set up for editing
        // *****************************************************
        function setupEditing() {
            // input boxes for the attribute editing
            editArea = dom.byId("editArea");
            updateInstructionDiv = dom.byId("updateInstructionDiv");
            attributeEditing = dom.byId("featureUpdateDiv");
            inputDescription = dom.byId("inputDescription");
            inputUserInfo = dom.byId("inputUserInfo");

            // *****************************************************
            // btnUpdate click event
            // update attributes of selected feature
            // *****************************************************
            on(dom.byId("btnUpdate"), "click", function (evt) {
                if (editFeature) {
                    editFeature.attributes["MaDoanhNghiep"] = inputDescription.value;
                    editFeature.attributes["NguoiDaiDienDoanhNghiep"] = inputUserInfo.value;

                    var edits = {
                        updateFeatures: [editFeature]
                    };

                    applyEdits(edits);
                }
            });

            // *****************************************************
            // btnAddFeature click event
            // create a new feature at the click location
            // *****************************************************
            on(dom.byId("btnAddFeature"), "click", function () {
                unselectFeature();
                on.once(view, "click", function (event) {
                    event.stopPropagation();

                    if (event.mapPoint) {
                        point = event.mapPoint.clone();
                        point.z = undefined;
                        point.hasZ = false;

                        newIncident = new Graphic({
                            geometry: point,
                            attributes: {}
                        });

                        var edits = {
                            addFeatures: [newIncident]
                        };

                        applyEdits(edits);

                        // ui changes in response to creating a new feature
                        // display feature update and delete portion of the edit area
                        attributeEditing.style.display = "block";
                        updateInstructionDiv.style.display = "none";
                        dom.byId("viewDiv").style.cursor = "auto";
                    } else {
                        console.error("event.mapPoint is not defined");
                    }
                });

                // change the view's mouse cursor once user selects
                // a new incident type to create
                dom.byId("viewDiv").style.cursor = "crosshair";
                editArea.style.cursor = "auto";
            });

            // *****************************************************
            // delete button click event. ApplyEdits is called
            // with the selected feature to be deleted
            // *****************************************************
            on(dom.byId("btnDelete"), "click", function () {
                var edits = {
                    deleteFeatures: [editFeature]
                };
                applyEdits(edits);
            });

            // *****************************************************
            // watch for view LOD change. Display Feature editing
            // area when view.zoom level is 14 or higher
            // otherwise hide the feature editing area
            // *****************************************************
            view.then(function () {
                watchUtils.whenTrue(view, "stationary", function () {
                    console.log(view.zoom);
                    if (editExpand) {
                        if (view.zoom <= 13) {
                            editExpand.domNode.style.display = "none";
                        } else {
                            editExpand.domNode.style.display = "block";
                        }
                    }
                });
            });
        }

        function handleLayerLoadError(err) {
            console.log("Layer failed to load: ", err);
        }
    });

    </script>
</head>

<body>
    <div id="searchArea" class="editArea-container">
        <div class="tab-content">
            <div id="home" class="tab-pane fade in active">
                <h4>Tìm kiếm thông tin</h4>
                <ul class="nav nav-tabs nav-green nav-justified responsive" id="myTab">
                    <li class="active"><a data-toggle="pill" href="#tab-doanhnghiep">Doanh nghiệp</a></li>
                    <li><a id="a-tab-saubenh" data-toggle="pill" href="#tab-saubenh">Sâu bệnh</a></li>
                    <li><a id="a-tab-trongtrot" data-toggle="pill" href="#tab-trongtrot">Trồng trọt</a></li>
                </ul>

                <div class="tab-content responsive">
                    <div class="tab-pane active" id="tab-doanhnghiep">
                        <h5>Tìm thông tin Doanh nghiệp</h5>
                        <div class="formSearch">
                            <input type="text" id="txtMaDN" class="form-control" placeholder="Mã doanh nghiệp" />
                            <input type="text" id="txtTen" class="form-control" placeholder="Tên doanh nghiệp" />
                            <input type="text" id="txtQuanHuyen" class="form-control" placeholder="Quận/Huyện" />
                            <button type="button" class="btn btn-default" id="btnFind">Tìm kiếm</button>
                            <button type="button" class="btn btn-default" id="btnExcel">Xuất Excel</button>
                            <img src="~/Content/img/default.gif" class="loading" style="display: none;" />
                        </div>
                        <div class="resultFormSearch">
                            <table data-toggle="table" class="table" data-row-style="rowStyle">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Tên doanh nghiệp <span class="label label-danger pull-right" id="counter">0</span></th>
                                    </tr>
                                </thead>

                                <tbody id="result"></tbody>
                            </table>
                        </div>
                    </div>
                    <div class="tab-pane" id="tab-saubenh">

                        <h5>Tìm thông tin Sâu bệnh</h5>
                        <div class="formSearch">
                            <select class="form-control" id="cbNhomCayTrong">
                                <option value="" selected>Nhóm cây trồng</option>
                            </select>
                            <select class="form-control" id="cbLoaiCayTrong">
                                <option value="" selected>Loại cây trồng</option>
                            </select>
                            <select class="form-control" id="cbCapDoGayHai">
                                <option value="" selected>Cấp độ gây hại</option>
                            </select>
                            <input type="number" id="nbPhamViAnhHuong" class="form-control" placeholder="Phạm vi ảnh hưởng" />
                            <input type="number" id="nbDienTich" class="form-control" placeholder="Diện tích" />
                            <button type="button" class="btn btn-default" id="btnFind">Tìm kiếm</button>
                            <button type="button" class="btn btn-default" id="btnExcel">Xuất Excel</button>
                            <img src="~/Content/img/default.gif" class="loading" style="display: none;" />
                        </div>
                        <div class="resultFormSearch">
                            <table data-toggle="table" class="table" data-row-style="rowStyle">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Tên sâu bệnh <span class="label label-danger  pull-right" id="counter">0</span></th>
                                    </tr>
                                </thead>
                                <tbody id="result"></tbody>
                            </table>
                        </div>

                    </div>
                    <div class="tab-pane" id="tab-trongtrot">

                        <h5>Tìm thông tin Cây trồng</h5>
                        <div class="formSearch">
                            <select class="form-control" id="cbNhomCayTrong">
                                <option value="" selected>Nhóm cây trồng</option>
                            </select>
                            <select class="form-control" id="cbLoaiCayTrong">
                                <option value="" selected>Loại cây trồng</option>
                            </select>
                            <select class="form-control" id="cbPhuongThucTrong">
                                <option value="" selected>Phương thức trồng</option>
                            </select>
                            <input type="number" id="nbDienTich" class="form-control" placeholder="Diện tích" />
                            <button type="button" class="btn btn-default" id="btnFind">Tìm kiếm</button>
                            <button type="button" class="btn btn-default" id="btnExcel">Xuất Excel</button>
                            <img src="~/Content/img/default.gif" class="loading" style="display: none;" />
                        </div>
                        <div class="resultFormSearch">
                            <table data-toggle="table" class="table" data-row-style="rowStyle">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Tên sâu bệnh <span class="label label-danger  pull-right" id="counter">0</span></th>
                                    </tr>
                                </thead>
                                <tbody id="result"></tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="editArea" class="editArea-container">
        <div id="addFeatureDiv">
            <h3 class="list-heading">Report Incidents</h3>
            <ul style="font-size: 13px; padding-left: 1.5em;">
                <li>Click Add incident button</li>
                <li>Click on the map to create the incident</li>
            </ul>
            <input type="button" class="edit-button" value="Add incident" id="btnAddFeature">
        </div>

        <div id="updateInstructionDiv" style="text-align:center">
            <p class="or-wrap"><span class="or-text">Or</span></p>
            <p>Select an incident to edit or delete.</p>
        </div>

        <div id="featureUpdateDiv" style="display:none; margin-top: 1em;">
            <h3 class="list-heading">Enter the incident information</h3>

            <div id="attributeArea">
                <label for="inputDescription">Description:</label>
                <input class="inputInfo" type="text" id="inputDescription" placeHolder="Enter description"><br>
                <label for="inputUserInfo">Contact:</label>
                <input class="inputInfo" required type="email" name="email" id="inputUserInfo" placeHolder="Enter email address"><br>
                <input type="button" class="edit-button" value="Update incident info" id="btnUpdate">
            </div>

            <div id="deleteArea">
                <input type="button" class="edit-button" value="Delete incident" id="btnDelete">
            </div>
        </div>
    </div>
    <div id="viewDiv"></div>
