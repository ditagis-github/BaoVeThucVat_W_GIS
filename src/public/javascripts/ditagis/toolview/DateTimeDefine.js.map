{"version":3,"file":"DateTimeDefine.js","sourceRoot":"","sources":["DateTimeDefine.ts"],"names":[],"mappings":";;IAAA;QAEI,YAAY,IAAI;YACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QACD,cAAc,CAAC,IAAI;YACf,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QACvD,CAAC;QACD,cAAc,CAAC,IAAI;YACf,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;QACD,MAAM,CAAC,eAAe,CAAC,GAAG;YACtB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,EAAE,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,GAAG,GAAO,IAAI,CAAC,OAAO,EAAE,EACxB,KAAK,GAAO,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAC/B,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC9B,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;gBACb,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACpB,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;gBACf,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;YACxB,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,gBAAgB,CAAC,MAAM;YAC1B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC,EAAE,CAAC;YACvB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,GAAG,GAAO,IAAI,CAAC,OAAO,EAAE,EACxB,KAAK,GAAO,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAC/B,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC9B,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;gBACb,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YACpB,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;gBACf,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;YAExB,MAAM,CAAC,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;QACrC,CAAC;KACJ;IACD,OAAS,cAAc,CAAC","sourcesContent":["class DateTimeDefine {\r\n    date:Date;\r\n    constructor(date) {\r\n        this.date = date;\r\n    }\r\n    checkOutOfDate(date) {\r\n        var today = new Date();\r\n        return (today.getTime() - date) > 0 ? false : true;\r\n    }\r\n    checkUnexpired(date) {\r\n        return !this.checkOutOfDate(date);\r\n    }\r\n    static formatDateValue(arg) {\r\n        if (!arg) return '';\r\n        var date = new Date(arg);\r\n        let day:any = date.getDate(),\r\n            month:any = date.getMonth() + 1,\r\n            year = date.getFullYear();\r\n        if (day / 10 < 1)\r\n            day = '0' + day;\r\n        if (month / 10 < 1)\r\n            month = '0' + month;\r\n        let value = `${year}-${month}-${day}`;\r\n        return value;\r\n    }\r\n    static formatNumberDate(number) {\r\n        if (!number) return '';\r\n        var date = new Date(number);\r\n        let day:any = date.getDate(),\r\n            month:any = date.getMonth() + 1,\r\n            year = date.getFullYear();\r\n        if (day / 10 < 1)\r\n            day = '0' + day;\r\n        if (month / 10 < 1)\r\n            month = '0' + month;\r\n\r\n        return `${day}/${month}/${year}`;\r\n    }\r\n}\r\nexport = DateTimeDefine;"]}