{"version":3,"file":"EventListener.js","sourceRoot":"","sources":["EventListener.ts"],"names":[],"mappings":";;IAAA;QAEI,YAAY,MAAM;YACd,IAAI,CAAC,cAAc,GAAG,EAErB,CAAC;YAEF,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YACpB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAEhD,CAAC;QAWD,EAAE,CAAC,IAAI,EAAE,QAAQ;YAEb,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAE5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;QAYD,IAAI,CAAC,IAAI,EAAE,GAAG;YACV,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACZ,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC;oBAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAClB,CAAC;YACL,CAAC;QACL,CAAC;KACJ;IACD,OAAS,aAAa,CAAC","sourcesContent":["class EventListener {\r\n    eventListeners;\r\n    constructor(member) {\r\n        this.eventListeners = {\r\n\r\n        };\r\n        //đăng ký phương thức và thuộc tính cho đối tượng cần tạo EventListener\r\n        member.on = this.on;\r\n        member.fire = this.fire;\r\n        member.eventListeners = this.eventListeners;\r\n\r\n    }\r\n    /**\r\n     * Đăng ký sự kiện cho {type} với công việc thực hiện {listener}\r\n     * Ví dụ:\r\n     * lớp lắng nghe đăng ký sự kiện 'change' và thực hiện callbackChange\r\n     * on('change',callbackChange) tức là đăng ký một sự kiện 'change'\r\n     * nếu lớp nguồn gọi phương thức fire('change')\r\n     * thì phương thức callbackChange sẽ được gọi\r\n     * @param {string} type \r\n     * @param {function} listener \r\n     */\r\n    on(type, listener) {\r\n        //kiểm tra có hay chưa\r\n        if (this.eventListeners[type]) {\r\n            //nếu có thì thêm vào\r\n            this.eventListeners[type].push(listener);\r\n        } else {\r\n            //nếu chưa thì khởi tạo\r\n            this.eventListeners[type] = [listener];\r\n        }\r\n    }\r\n    /**\r\n     * Gọi những phương thức đã được đăng ký với {type} hoạt động và truyền\r\n     * vào tham số {evt}\r\n     * Ví dụ:\r\n     * Khi lớp nguồn thực hiện một việc nào đó và gọi phương thức fire\r\n     * thì những thành phần nào đăng ký lắng nghe sự kiện {type} sẽ được gọi\r\n     * phương thức mà nó đã đăng ký thực hiện ở phương thức on(type,listener)\r\n     * và khi listener được gọi thì sẽ được truyền vào giá trị là {evt}\r\n     * @param {string} type \r\n     * @param {*} evt\r\n     */\r\n    fire(type, evt) {\r\n        let listeners = this.eventListeners[type];\r\n        if (listeners) {\r\n            for (let listener of listeners) {\r\n                listener(evt);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport = EventListener;"]}