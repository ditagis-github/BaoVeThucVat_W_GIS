{"version":3,"file":"PointEditing.js","sourceRoot":"","sources":["PointEditing.ts"],"names":[],"mappings":"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","sourcesContent":["import QueryTask = require(\"esri/tasks/QueryTask\");\r\nimport Query = require(\"esri/tasks/support/Query\");\r\nimport editingSupport = require('../support/Editing');\r\nimport View = require('esri/views/MapView');\r\nimport FeatureLayer = require('esri/layers/FeatureLayer');\r\nimport Point = require('esri/geometry/Point');\r\nimport Graphic = require('esri/Graphic');\r\nimport constName = require('../classes/ConstName');\r\nclass PointEditing {\r\n  private view: View\r\n  private _layer: FeatureLayer;\r\n  constructor(view: View) {\r\n    if (view) {\r\n      this.view = view;\r\n    }\r\n  }\r\n  get layer(): FeatureLayer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: FeatureLayer) {\r\n    this._layer = value;\r\n  }\r\n  draw(graphic): void;\r\n  draw(graphic, layer): void;\r\n  async draw(graphic, layer?) {\r\n    try {\r\n      var notify = $.notify({\r\n        title: '<strong>Cập nhật đối tượng</strong>',\r\n        message: 'Đang cập nhật...'\r\n      }, {\r\n          showProgressbar: true,\r\n          delay: 20000\r\n        });\r\n      //tạo attributes để giữ giá trị cho graphic attribute khi sử dụng phương thức applyEdits\r\n      let attributes = {};\r\n\r\n      /**\r\n       * ví dụ sử dụng domain thì cần phải gán domain vào attributes thì khi thêm đối tượng\r\n       * vào cơ sở dữ liệu thì mới hiển thị lên được bản đồ\r\n       */\r\n      if (layer.drawingAttributes) {\r\n        for (let i in layer.drawingAttributes) {\r\n          attributes[i] = layer.drawingAttributes[i];\r\n        }\r\n      }\r\n      if (layer.id === constName.SAUBENH) {\r\n        attributes['NgayXayRa'] = new Date().getTime();\r\n      }\r\n\r\n\r\n\r\n      //lấy thông tin cập nhật gồm người tạo và thời gian tạo\r\n      notify.update('type', 'info')\r\n      notify.update('message', 'Đang lấy định danh...')\r\n      notify.update('progress', 20)\r\n      const createdInfo = await editingSupport.getCreatedInfo(this.view);\r\n      for (let i in createdInfo) {\r\n        attributes[i] = createdInfo[i];\r\n      }\r\n      notify.update('type', 'info')\r\n      notify.update('message', 'Lấy định danh thành công')\r\n      notify.update('progress', 30)\r\n      graphic.attributes = attributes;\r\n      let edits = {\r\n        addFeatures: [graphic]\r\n      };\r\n      layer.applyEdits(edits).then((result) => {\r\n        if (result.addFeatureResults.length > 0) {\r\n          for (let item of result.addFeatureResults) {\r\n            //lấy thông tin xã huyện\r\n            notify.update('type', 'info');\r\n            notify.update('message', 'Đang lấy vị trí...!')\r\n            notify.update('progress', 55)\r\n            var proms = [];\r\n            proms.push(editingSupport.getNhomCayTrong(this.view, graphic.geometry));\r\n            proms.push(editingSupport.getLocationInfo(this.view, graphic.geometry));\r\n            Promise.all(proms).then((value) => {\r\n              notify.update('type', 'info');\r\n              notify.update('message', 'Lấy vị trí thành công!')\r\n              notify.update('progress', 80 );\r\n              let attributes = { objectId: item.objectId };\r\n              for (let i in value[0]) {\r\n                attributes[i] = value[0][i];\r\n              }\r\n              for (let i in value[1]) {\r\n                attributes[i] = value[1][i];\r\n              }\r\n              layer.applyEdits({\r\n                updateFeatures: [{\r\n                  attributes: attributes\r\n                }]\r\n              }).then((result) => {\r\n                if (!result.updateFeatureResults[0].error) {\r\n                  notify.update('type', 'success')\r\n                  notify.update('message', 'Cập nhật vị trí thành công!')\r\n                  notify.update('progress', 100 );\r\n                  //POPUP OPEN\r\n                  layer.queryFeatures({\r\n                    returnGeometry: true,\r\n                    spatialReference: this.view.spatialReference,\r\n                    where: 'OBJECTID = ' + item.objectId,\r\n                    outFields: ['*']\r\n                  }).then(res => {\r\n                    //neu tim duoc\r\n                    if (res.features[0]) {\r\n                      let ft = res.features[0];\r\n                      this.view.popup.open({\r\n                        features: [ft],\r\n                        location: ft.geometry\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n                else\r\n                  notify.update('type', 'danger')\r\n                  notify.update('message', 'Cập nhật vị trí không thành công');\r\n                  notify.update('progress', 100 );\r\n              });\r\n\r\n            });\r\n\r\n\r\n\r\n          }\r\n        }\r\n      })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n}\r\nexport = PointEditing;"]}